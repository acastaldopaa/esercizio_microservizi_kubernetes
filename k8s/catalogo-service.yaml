apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalogo-service
  namespace: microservizi-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: catalogo-service
  template:
    metadata:
      labels:
        app: catalogo-service
    spec:
      containers:
        - name: catalogo-service
          image: docker.io/library/catalogo-service:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8082
          env:
            - name: QUARKUS_HTTP_PORT
              value: "8082"
            - name: QUARKUS_DATASOURCE_JDBC_URL
              value: "jdbc:postgresql://postgresql:5432/prova"
            - name: QUARKUS_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: postgresql.username
            - name: QUARKUS_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: postgresql.password
            - name: KAFKA_BOOTSTRAP_SERVERS
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: kafka.bootstrap.servers
          livenessProbe:
            httpGet:
              path: /q/health/live
              port: 8082
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /q/health/ready
              port: 8082
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: catalogo-service
  namespace: microservizi-app
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: /q/metrics
    prometheus.io/port: '8082'
spec:
  selector:
    app: catalogo-service
  ports:
    - port: 8082
      targetPort: 8082
  type: ClusterIP